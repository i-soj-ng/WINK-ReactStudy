[{"C:\\Users\\이소정\\WebstormProjects\\react.js-project\\src\\index.js":"1","C:\\Users\\이소정\\WebstormProjects\\react.js-project\\src\\App.js":"2","C:\\Users\\이소정\\WebstormProjects\\react.js-project\\src\\reportWebVitals.js":"3","C:\\Users\\이소정\\WebstormProjects\\react.js-project\\src\\pages\\MyPage.js":"4","C:\\Users\\이소정\\WebstormProjects\\react.js-project\\src\\pages\\MainPage.js":"5","C:\\Users\\이소정\\WebstormProjects\\react.js-project\\src\\pages\\TimeLinePage.js":"6","C:\\Users\\이소정\\WebstormProjects\\react.js-project\\src\\components\\TimeLine\\Writing.js":"7","C:\\Users\\이소정\\WebstormProjects\\react.js-project\\src\\components\\TimeLine\\Timeline.js":"8","C:\\Users\\이소정\\WebstormProjects\\react.js-project\\src\\components\\TimeLine\\Feed.js":"9","C:\\Users\\이소정\\WebstormProjects\\react.js-project\\src\\server\\MyInfo.js":"10","C:\\Users\\이소정\\WebstormProjects\\react.js-project\\src\\pages\\LoginPage.js":"11","C:\\Users\\이소정\\WebstormProjects\\react.js-project\\src\\api\\server.js":"12","C:\\Users\\이소정\\WebstormProjects\\react.js-project\\src\\pages\\SignUp.js":"13"},{"size":1072,"mtime":1612767927922,"results":"14","hashOfConfig":"15"},{"size":194,"mtime":1609699674013,"results":"16","hashOfConfig":"15"},{"size":362,"mtime":499162500000,"results":"17","hashOfConfig":"15"},{"size":185,"mtime":1611567543285,"results":"18","hashOfConfig":"15"},{"size":404,"mtime":1611589575595,"results":"19","hashOfConfig":"15"},{"size":896,"mtime":1613227386951,"results":"20","hashOfConfig":"15"},{"size":697,"mtime":1613226788726,"results":"21","hashOfConfig":"15"},{"size":227,"mtime":1609588257078,"results":"22","hashOfConfig":"15"},{"size":356,"mtime":1613224949194,"results":"23","hashOfConfig":"15"},{"size":479,"mtime":1611567411663,"results":"24","hashOfConfig":"15"},{"size":1481,"mtime":1613225979941,"results":"25","hashOfConfig":"15"},{"size":2886,"mtime":1613224852586,"results":"26","hashOfConfig":"15"},{"size":1858,"mtime":1612768677225,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"1t5sq3q",{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"30"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"30"},"C:\\Users\\이소정\\WebstormProjects\\react.js-project\\src\\index.js",[],["57","58"],"C:\\Users\\이소정\\WebstormProjects\\react.js-project\\src\\App.js",[],"C:\\Users\\이소정\\WebstormProjects\\react.js-project\\src\\reportWebVitals.js",[],"C:\\Users\\이소정\\WebstormProjects\\react.js-project\\src\\pages\\MyPage.js",[],"C:\\Users\\이소정\\WebstormProjects\\react.js-project\\src\\pages\\MainPage.js",[],"C:\\Users\\이소정\\WebstormProjects\\react.js-project\\src\\pages\\TimeLinePage.js",["59"],"C:\\Users\\이소정\\WebstormProjects\\react.js-project\\src\\components\\TimeLine\\Writing.js",[],"C:\\Users\\이소정\\WebstormProjects\\react.js-project\\src\\components\\TimeLine\\Timeline.js",[],"C:\\Users\\이소정\\WebstormProjects\\react.js-project\\src\\components\\TimeLine\\Feed.js",[],"C:\\Users\\이소정\\WebstormProjects\\react.js-project\\src\\server\\MyInfo.js",[],"C:\\Users\\이소정\\WebstormProjects\\react.js-project\\src\\pages\\LoginPage.js",[],"C:\\Users\\이소정\\WebstormProjects\\react.js-project\\src\\api\\server.js",["60","61","62"],"let serverUri = 'https://react-js-sample-api.kmuwink.net';\r\nconst token = window.localStorage.getItem('token');\r\n\r\nexport async function createFeed(content) {\r\n    const result = await fetch(serverUri + '/feed/', {\r\n        method: 'post',\r\n        headers: {\r\n            Authorization: 'Token ' + token,\r\n            'Content-Type' : 'application/json',\r\n        },\r\n        body: JSON.stringify({\r\n            content,\r\n        }),\r\n    });\r\n    console.log(result);\r\n    window.location.reload();\r\n}\r\n\r\nexport async function createComment(id, content) {\r\n    const result = await fetch(serverUri + '/feed/${id}/comment/', {\r\n        method: 'post',\r\n        headers: {\r\n            Authorization: 'Token ' + token,\r\n            'Content-Type' : 'application/json',\r\n        },\r\n        body: JSON.stringify({\r\n            content,\r\n        }),\r\n    });\r\n    console.log(result);\r\n    window.location.reload();\r\n}\r\n\r\nexport async function readFeeds() {\r\n    const readResult = await fetch(serverUri + '/feed/', {\r\n        method: 'get',\r\n        headers: {\r\n            Authorization: 'Token ' + token,\r\n        },\r\n    });\r\n    const readJson = await readResult.json();\r\n    return readJson.reverse();\r\n}\r\n\r\nexport async function readFeed(id) {\r\n    const readResult = await fetch(serverUri + '/feed/${id}/', {\r\n        method: 'get',\r\n        headers: {\r\n            Authorization: 'Token ' + token,\r\n        },\r\n    });\r\n    return await readResult.json();\r\n}\r\n\r\nexport async function readComments(id) {\r\n    const readResult = await fetch(serverUri + '/feed/${id}/comment/', {\r\n        method: 'get',\r\n        headers: {\r\n            Authorization: 'Token ' + token,\r\n        },\r\n    });\r\n    return await readResult.json();\r\n}\r\n\r\nexport async function createToken(username, password) {\r\n    const response = await fetch(serverUri + '/api-token-auth/', {\r\n        method: 'post',\r\n        headers: {\r\n            'Content-Type' : 'application/json',\r\n        },\r\n        body: JSON.stringify({\r\n            username,\r\n            password\r\n        }),\r\n    });\r\n    return await response.json();\r\n}\r\n\r\nexport async function createUser(username, email, password, last_name, first_name) {\r\n    const response = await fetch(serverUri + '/user/', {\r\n        method: 'post',\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({\r\n            username: username,\r\n            email: email,\r\n            password: password,\r\n            last_name: last_name,\r\n            first_name: first_name\r\n        }),\r\n    });\r\n    return await response.json();\r\n}\r\n\r\nexport async function readUser() {\r\n    const readResult = await fetch(serverUri + '/user/', {\r\n        method: 'get',\r\n    });\r\n    const readJson = await readResult.json();\r\n    return {\r\n        username: readJson.username,\r\n        email: readJson.email,\r\n    };\r\n}","C:\\Users\\이소정\\WebstormProjects\\react.js-project\\src\\pages\\SignUp.js",["63"],"import React, {useState} from 'react';\r\nimport * as api from '../api/server';\r\nimport './signup.css';\r\n\r\nexport function SignUp(props) {\r\n    const [input, setInput] = useState({\r\n        username: '',\r\n        email: '',\r\n        password: '',\r\n        last_name: '',\r\n        first_name: '',\r\n    });\r\n    const setInputData = (key, data) => {\r\n        setInput({\r\n            ...input,\r\n            [key]: data,\r\n        })\r\n    };\r\n    const join = async () => {\r\n        const {history} = props;\r\n        const token = await api.createUser(input.username, input.email, input.password, input.last_name, input.first_name);\r\n        if(token.non_field_errors) {\r\n            token.non_field_errors.map((e) => alert(e))\r\n        } else {\r\n            console.log(token);\r\n            // history.push('/');\r\n        }\r\n    }\r\n    return (\r\n        <div className=\"signupBox\">\r\n            <h1 id=\"signupTitle\">회원가입</h1>\r\n            <div className=\"box\">\r\n                <div className=\"IDspace\"><h3 id=\"idText\">ID</h3><input type=\"text\" onChange={(e) => setInputData('username', e.target.value)}/></div>\r\n                <div className=\"emailspace\"><h3 id=\"emailText\">E-mail</h3><input type=\"email\" onChange={(e) => setInputData('email', e.target.value)}/></div>\r\n                <div className=\"PWspace\"><h3 id=\"pwText\">Password</h3><input type=\"password\" onChange={(e) => setInputData('password', e.target.value)}/></div>\r\n                <div className=\"FNspace\"><h3 id=\"fnText\">First Name</h3><input type=\"text\" onChange={(e) => setInputData('last_name', e.target.value)}/></div>\r\n                <div className=\"LNspace\"><h3 id=\"lnText\">Last Name</h3><input type=\"text\" onChange={(e) => setInputData('first_name', e.target.value)}/></div>\r\n            </div>\r\n            <button onClick={join}>회원가입</button>\r\n        </div>\r\n    );\r\n}",{"ruleId":"64","replacedBy":"65"},{"ruleId":"66","replacedBy":"67"},{"ruleId":"68","severity":1,"message":"69","line":9,"column":11,"nodeType":"70","messageId":"71","endLine":9,"endColumn":18},{"ruleId":"72","severity":1,"message":"73","line":20,"column":44,"nodeType":"74","messageId":"75","endLine":20,"endColumn":66},{"ruleId":"72","severity":1,"message":"73","line":46,"column":48,"nodeType":"74","messageId":"75","endLine":46,"endColumn":62},{"ruleId":"72","severity":1,"message":"73","line":56,"column":48,"nodeType":"74","messageId":"75","endLine":56,"endColumn":70},{"ruleId":"68","severity":1,"message":"69","line":20,"column":16,"nodeType":"70","messageId":"71","endLine":20,"endColumn":23},"no-native-reassign",["76"],"no-negated-in-lhs",["77"],"no-unused-vars","'history' is assigned a value but never used.","Identifier","unusedVar","no-template-curly-in-string","Unexpected template string expression.","Literal","unexpectedTemplateExpression","no-global-assign","no-unsafe-negation"]